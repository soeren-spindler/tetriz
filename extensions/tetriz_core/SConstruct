#!/usr/bin/env python
import os
import sys


# Settings
#
library_name = "libtetriz_core"
addons_path = "../../addons/tetriz_core"
source_path = "src"


# Build definition
#
env = SConscript("../godot-cpp/SConstruct")
env.Append(CPPPATH=[f"{source_path}/"])

sources = Glob(f"{source_path}/*.cpp")

if env["target"] in ["editor", "template_debug"]:
    doc_data = env.GodotCPPDocData(
        f"{source_path}/gen/doc_data.gen.cpp", source=Glob("doc_classes/*.xml")
    )
    sources.append(doc_data)

library_file_name = "{}{}{}".format(library_name, env["suffix"], env["SHLIBSUFFIX"])
if env["platform"] == "macos" or env["platform"] == "ios":
    file_name = "{}.{}.{}".format(library_name, env["platform"], env["target"])
    library_file_name = "{}.framework/{}".format(file_name, file_name)

library_file = "{}/{}/{}".format("bin", env["platform"], library_file_name)
library = env.SharedLibrary(library_file, source=sources)

copy_addons = env.InstallAs("{}/{}".format(addons_path, library_file_name), library)
# copy_external = env.InstallAs("{}/{}".format(external_addons_path, library_file_name), library)

default_args = [library, copy_addons]
Default(*default_args)
